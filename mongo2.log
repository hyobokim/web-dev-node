> use webdev
switched to db webdev
> db.movies.insert({title: 'Aliens', rating: 4.5})
WriteResult({ "nInserted" : 1 })
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
webdev  0.000GB
> db.movies.insert({title: 'Terminator', rating: 4.8})
WriteResult({ "nInserted" : 1 })
> db.movies.insert({title: 'Avatar', rating: 4.7})
WriteResult({ "nInserted" : 1 })
> db.movies.insert({title: 'Dune', rating: 4.9})
WriteResult({ "nInserted" : 1 })
> db.movies.find()
{ "_id" : ObjectId("61a6ffea6e581710b775f49f"), "title" : "Aliens", "rating" : 4.5 }
{ "_id" : ObjectId("61a700146e581710b775f4a0"), "title" : "Terminator", "rating" : 4.8 }
{ "_id" : ObjectId("61a7001f6e581710b775f4a1"), "title" : "Avatar", "rating" : 4.7 }
{ "_id" : ObjectId("61a7002d6e581710b775f4a2"), "title" : "Dune", "rating" : 4.9 }
> db.movies.find({_id: ObjectId("61a6ffea6e581710b775f49f")})
{ "_id" : ObjectId("61a6ffea6e581710b775f49f"), "title" : "Aliens", "rating" : 4.5 }
> db.movies.find({title: 'Aliens'})
{ "_id" : ObjectId("61a6ffea6e581710b775f49f"), "title" : "Aliens", "rating" : 4.5 }
> db.movies.find().pretty()
{
        "_id" : ObjectId("61a6ffea6e581710b775f49f"),
        "title" : "Aliens",
        "rating" : 4.5
}
{
        "_id" : ObjectId("61a700146e581710b775f4a0"),
        "title" : "Terminator",
        "rating" : 4.8
}
{
        "_id" : ObjectId("61a7001f6e581710b775f4a1"),
        "title" : "Avatar",
        "rating" : 4.7
}
{
        "_id" : ObjectId("61a7002d6e581710b775f4a2"),
        "title" : "Dune",
        "rating" : 4.9
}
> db.movies.updateOne({title: "Avatar"}, {rating: 4.9})
uncaught exception: Error: the update operation document must contain atomic operators :
DBCollection.prototype.updateOne@src/mongo/shell/crud_api.js:565:19
@(shell):1:1
> db.movies.updateOne({title: 'Avatar'}, {$set : {rating: 4.9}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.movies.find()
{ "_id" : ObjectId("61a6ffea6e581710b775f49f"), "title" : "Aliens", "rating" : 4.5 }
{ "_id" : ObjectId("61a700146e581710b775f4a0"), "title" : "Terminator", "rating" : 4.8 }
{ "_id" : ObjectId("61a7001f6e581710b775f4a1"), "title" : "Avatar", "rating" : 4.9 }
{ "_id" : ObjectId("61a7002d6e581710b775f4a2"), "title" : "Dune", "rating" : 4.9 }
> db.movies.updateOne({_id: ObjectId("61a7002d6e581710b775f4a2")}, {$set : {rating: 4.8}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.movies.deleteOne({_id: ObjectId("61a700146e581710b775f4a0")})
{ "acknowledged" : true, "deletedCount" : 1 }
> db.movies.find()
{ "_id" : ObjectId("61a6ffea6e581710b775f49f"), "title" : "Aliens", "rating" : 4.5 }
{ "_id" : ObjectId("61a7001f6e581710b775f4a1"), "title" : "Avatar", "rating" : 4.9 }
{ "_id" : ObjectId("61a7002d6e581710b775f4a2"), "title" : "Dune", "rating" : 4.8 }

